{"version":3,"sources":["services/ApiCall.js","components/nav/SideNav.js","components/splitter/SplitterPage.js","components/welcome/Welcome.js","components/toolbar/ToolbarHeader.js","pages/home/Home.js","pages/users/Users.js","pages/about/About.js","pages/auth/Login.js","pages/auth/VerifyCompany.js","App.js","serviceWorker.js","index.js"],"names":["ApiCall","apiCallResponseBefore","url","objData","key","dataSent","callBack","this","error","fetch","method","body","JSON","stringify","catch","err","response","data","json","then","resp","pushParams4Get","React","Component","NavItemButton","props","onClick","pushMethod","pushComponent","icon","style","color","displayName","SideNav","name","sideNavTitle","Home","About","VerifyCompany","Users","Login","map","component","pushPage","SplitterPage","side","width","collapse","isOpen","sideNav","swipeable","onClose","onCloseSideNav","onOpen","onOpenSideNav","nav","header","Welcome","marginTop","ToolbarHeader","toolBarBtn","className","toolBarBtnCallBack","backButton","modifier","state","company","currentState","apiCall","componentDidMount","navigator","newComponent","setState","bind","User","users","numbers","num","id","firstname","lastname","username","pushUp","push","length","border","popPage","LoginForm","componentWillUnmount","console","log","loginFormInputs","form_data","value","type","field_id","placeholder","label","login","VerityCompany","dataToNewState","event","$","val","Ons","notification","alert","preventDefault","req","ajaxGet","trim","verifyCompany","onChange","handleChange","handleSubmit","App","route","createElement","initialRoute","renderPage","Boolean","window","location","hostname","match","document","addEventListener","ReactDOM","render","cordovaWork","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6db6b9d4.chunk.js","sourcesContent":["import React ,{Component} from \"react\";\r\nimport $ from \"jquery\";\r\n\r\n\r\nexport default class ApiCall extends React.Component {\r\n\r\n\tapiCallResponseBefore = {\r\n        \"data\" : {},\r\n\t\t\"error\" : [],\r\n\t\t\"success\" : []\r\n    };\r\n    \r\n    // API call \r\n    // Params ( url , Data Object)\r\n    // Methos Get\r\n    // return get url with params\r\n    pushParams4Get(url ,objData){\r\n        url += \"?\";\r\n        for( let key in objData){\r\n            url += key +\"=\"+ objData[key] + \"&\";\r\n        }\r\n        return url;\r\n    }\r\n\r\n    // API call \r\n    // Params ( url , Data Object , callBack)\r\n    // Optional params callBack\r\n    // Methos Post\r\n    // return response and  json to callback function\r\n    async ajaxPost(url ,dataSent,callBack){\r\n    \tif(!url) {\r\n    \t\tthis.apiCallResponseBefore.error = \"No Url found\";\r\n    \t\treturn this.apiCallResponseBefore;\r\n    \t} \r\n\r\n    \tconst response = await fetch(url, {\r\n            method: 'POST',\r\n            body:JSON.stringify(dataSent)\r\n\r\n        }).catch( err => {\r\n            // console.log(err);\r\n            return false;\r\n        });\r\n\r\n        if(!response){\r\n            return response;\r\n        }\r\n\r\n        const data = await response;\r\n        data.json().then( function (resp){\r\n            if(callBack) callBack(resp); \r\n        });\r\n        return data;\r\n    }\r\n    \r\n    // API call \r\n    // Params ( url , Data Object , callBack)\r\n    // Optional params callBack\r\n    // Methos Get\r\n    // return response and  json to callback function\r\n    async ajaxGet(url ,dataSent,callBack){\r\n        if(!url) {\r\n            this.apiCallResponseBefore.error = \"No Url found\";\r\n            return this.apiCallResponseBefore;\r\n        }\r\n        url = this.pushParams4Get(url , dataSent);\r\n        const response = await fetch(url, {\r\n            method: 'GET',\r\n            data:JSON.stringify(dataSent)\r\n        }).catch( err => {\r\n                // console.log(err);\r\n                return false;\r\n        });\r\n\r\n        if(!response){\r\n            return response;\r\n        }\r\n\r\n        const data = await response;\r\n        data.json().then( function (resp){\r\n            if(callBack) callBack(resp); \r\n        });\r\n        return data;\r\n    }\r\n\r\n// headers: {\r\n//     'Accept': 'application/json',\r\n//     'Access-Control-Allow-Origin' : '*',\r\n//     'Content-Type': 'application/json',\r\n// }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport css from \"./Nav.css\";\r\nimport {\r\n    Page,\r\n    List,\r\n    ListItem,\r\n    ListTitle,\r\n    Icon,\r\n    Ripple\r\n    \r\n} from 'react-onsenui'; // Only import the necessary components\r\n// import * as Ons from 'react-onsenui'; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\nimport {Home ,About, VerifyCompany ,Users ,Login} from \"../../router\";\r\nimport {ToolbarHeader} from \"../components\";\r\n\r\n// const NavItemA = props => (\r\n//     <ListTitle  style={{fontSize: 15}} > {props.name} </ListTitle>\r\n// );\r\n\r\nconst NavItemButton = props => (\r\n    <ListItem onClick={ ()=>props.pushMethod(props.pushComponent)}>\r\n        <Icon icon=\"md-face\" style={{color: \"red\"}}></Icon> &nbsp;&nbsp;\r\n        <Ripple color='grey' />\r\n        {props.pushComponent.displayName}\r\n    </ListItem>\r\n);\r\n\r\n  \r\nexport default class SideNav extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n    render(){                  \r\n        return (    \r\n            <Page> \r\n                <ToolbarHeader name={(this.props.sideNavTitle)?this.props.sideNavTitle: \"Main Menu\" } />\r\n                <List>\r\n                    {\r\n                        [Home ,About, VerifyCompany ,Users ,Login].map( (component ,key) => {\r\n                            return <NavItemButton key={key} pushMethod={this.props.pushPage} pushComponent={component} /> \r\n                        })\r\n                    }      \r\n                </List>\r\n            </Page>\r\n        )        \r\n    }\r\n\r\n}\r\n\r\n\r\n","import React ,{Component} from \"react\";\r\nimport {\r\n    Splitter,\r\n    SplitterSide,\r\n    Page,\r\n    SplitterContent,\r\n} from 'react-onsenui'; // Only import the necessary components\r\n// import * as Ons from 'react-onsenui'; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n\r\n\r\nconst SplitterPage = props => (\r\n    <Page>\r\n    <Splitter> \r\n     <SplitterSide\r\n        side={ (props.side) ? props.side : \"left\"}\r\n        width={300}\r\n        collapse={true}\r\n        isOpen={props.sideNav}\r\n        swipeable={true}\r\n        onClose={props.onCloseSideNav}\r\n        onOpen={props.onOpenSideNav}>\r\n        {props.nav}\r\n      </SplitterSide>\r\n\r\n      <SplitterContent>\r\n        <Page>\r\n          {props.header}\r\n          {props.body}\r\n        </Page>\r\n      \r\n      </SplitterContent>\r\n\r\n    </Splitter>\r\n  </Page>\r\n);\r\nexport default SplitterPage;\r\n","import React ,{Component} from \"react\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    Page,\r\n    LazyList\r\n} from 'react-onsenui'; // Only import the necessary components\r\n// import * as Ons from 'react-onsenui'; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n\r\nfunction renderRow(index) {\r\n    return (\r\n      <ListItem key={index}>\r\n        {'Item ' + (index + 1)}\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\nconst Welcome = props => (\r\n    <div style={{marginTop: 10}}>\r\n        <List>\r\n            <ListItem>\r\n                Hello\r\n            </ListItem>\r\n            <ListItem>\r\n                Hello 1\r\n            </ListItem>\r\n            <ListItem>\r\n                Hello 1\r\n            </ListItem>\r\n            <ListItem>\r\n                Hello 1\r\n            </ListItem>\r\n            <ListItem>\r\n                Hello 1\r\n            </ListItem>\r\n        </List>\r\n    </div>\r\n);\r\nexport default Welcome;\r\n","import React from \"react\";\r\nimport {\r\n    Toolbar,\r\n    BackButton,\r\n    ToolbarButton,\r\n    Icon,\r\n    List,\r\n    ListItem\r\n} from 'react-onsenui'; // Only import the necessary components\r\n// import * as Ons from 'react-onsenui'; // Import everything and use it as 'Ons.Page', 'Ons.Button'\r\n\r\nconst ToolbarHeader = props => (\r\n    <div>\r\n        <Toolbar>\r\n            { \r\n                (props.toolBarBtn)? (\r\n                    <div className='left' onClick ={(props.toolBarBtnCallBack)? props.toolBarBtnCallBack : null}>\r\n                        <ToolbarButton >\r\n                            <Icon icon=\"md-menu\"></Icon>\r\n                        </ToolbarButton>\r\n                    </div>\r\n                ):(null)\r\n            }\r\n            {\r\n                (props.backButton)? (\r\n                    <div className='left'>\r\n                        <BackButton>\r\n                            Back\r\n                        </BackButton>\r\n                    </div>\r\n                ):(null)\r\n            }\r\n        <div className='center'>\r\n            {props.name}\r\n        </div>\r\n        </Toolbar>\r\n        <List>\r\n            <ListItem modifier='longdivider'></ListItem>\r\n        </List>\r\n    </div>\r\n);\r\nexport default ToolbarHeader;\r\n","import React ,{Component} from \"react\";\r\nimport ApiCall , {apiCallResponseAfter} from \"../../services/ApiCall\";\r\nimport {ToolbarHeader,SideNav ,SplitterPage , Welcome, Ons } from \"../../components/components\";\r\nimport { VerifyCompany } from \"../../router\";\r\n// import {About} from \"../../router\";\r\n\r\nclass Home  extends Component {\r\n\r\n    static displayName = 'Home Page';\r\n    state = {\r\n        company: '',\r\n        currentState: false,\r\n        sideNav:false\r\n    };\r\n    apiCall = new ApiCall; \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if ( !this.props.navigator.state.company)\r\n            this.pushPage(VerifyCompany)\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // if ( !this.props.navigator.state.company)\r\n        //     this.pushPage(VerifyCompany)\r\n    }\r\n\r\n    pushPage(newComponent) {\r\n        this.props.navigator.pushPage({component: newComponent});\r\n    }\r\n\r\n    toolBarBtn(){\r\n        this.setState({sideNav : true });\r\n    }\r\n\r\n    render (){\r\n        // navigator.app.exitApp();\r\n        return (\r\n          <SplitterPage \r\n            nav= {<SideNav side=\"right\" sideNavTitle={false} pushPage={this.pushPage.bind(this)} />} \r\n            sideNav= {this.state.sideNav} \r\n            header= {\r\n                <ToolbarHeader \r\n                    toolBarBtnCallBack={this.toolBarBtn.bind(this)} \r\n                    toolBarBtn={true} \r\n                    backButton={false} \r\n                    name=\"Home\" /> \r\n                }\r\n            body={ <Welcome />} \r\n            />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home;\r\n\r\n// navigator.app.exitApp();\r\n// cameraSuccess(s){\r\n//     Ons.notification.alert(s)\r\n//     navigator.camera.getPicture(this.cameraSuccess ,this.cameraError);\r\n// }\r\n\r\n// cameraError(e){\r\n//     Ons.notification.alert(e)\r\n// }\r\n// ons.ready(function() {\r\n//     // To disable a navigator back button handler\r\n//     navigator.getDeviceBackButtonHandler().disable();\r\n    \r\n//     // Or to change the behavior\r\n//     navigator.getDeviceBackButtonHandler().setListener(function(event) {\r\n//     console.log(\"back button pressed\")});\r\n//     }\r\n//     Or\r\n    \r\n//     <ons-page on-device-backbutton=\"doSomething()\">\r\n//     Some page content\r\n//     </ons-page>","import React ,{Component} from \"react\";\r\nimport SideNav from \"../../components/nav/SideNav\";\r\n\r\nconst User = props =>\r\n    <tr>\r\n        <td> props.id </td>\r\n        <td> props.firstname </td>\r\n        <td> props.lastname </td>\r\n        <td> props.username </td>\r\n    </tr>;\r\n\r\nclass Users  extends Component{\r\n\r\n    static displayName = 'Users';\r\n    constructor (props){\r\n        super();\r\n        this.pushUp = this.pushUp.bind(this);\r\n        this.state = {\r\n            \"numbers\": [1,2,3,4,5,6,7],\r\n            \"currentState\": false\r\n        }\r\n    }\r\n\r\n    pushUp(){\r\n        this.state.numbers.push(this.state.numbers.length +1);\r\n        this.setState({\"numbers\" : this.state.numbers });\r\n    };\r\n    \r\n    users = function(){\r\n        return this.state.numbers.map( num => {\r\n            return (\r\n            \t<User id={num} firstname=\"Prince\" lastname=\"Lastname\" username=\"PK\" key={num} />\r\n            )\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h2>Users</h2>\r\n                <table border=\"2\"> \r\n                    <thead>\r\n                        <tr> \r\n                            <th> First Name </th>\r\n                            <th> Last Name </th>\r\n                            <th> Username </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.users()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport {Page, Toolbar, Button} from 'react-onsenui';\r\nimport {ToolbarHeader,SideNav ,SplitterPage , Welcome} from \"../../components/components\";\r\n\r\nexport default class About extends React.Component {\r\n    \r\n    static displayName = 'About';\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    pushPage(newComponent) {\r\n        this.props.navigator.pushPage({component: newComponent});\r\n    }\r\n\r\n    popPage() {\r\n        this.props.navigator.popPage();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <ToolbarHeader backButton={true} name={About.displayName} /> \r\n        );\r\n    }\r\n}\r\n  ","import React ,{Component} from \"react\";\r\nimport css from \"./Login.css\";\r\nimport ApiCall from \"../../services/ApiCall\";\r\nimport $ from \"jquery\";\r\nimport {ToolbarHeader} from \"../../components/components\";\r\nimport {Home , VerifyCompany} from \"../../router\";\r\nimport {\r\n    Page,\r\n    Card,\r\n    List,\r\n    ListItem,\r\n    Input,\r\n    Button\r\n} from 'react-onsenui';\r\n\r\nexport const LoginForm = props =>(\r\n    <p>\r\n        <Input\r\n            modifier='material'\r\n            className=\"block-input\"\r\n            {... props} />\r\n    </p>\r\n);\r\n\r\nclass Login  extends Component{\r\n    static displayName = 'Login';\r\n    constructor (props){\r\n        super();\r\n        this.state = {\r\n            \"currentState\": false,\r\n        };\r\n        this.apiCall = new ApiCall;        \r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.navigator.state.data ) {\r\n            this.pushPage(VerifyCompany);\r\n        }\r\n    }\r\n    \r\n    componentWillUnmount = () => {\r\n        console.log('Is this getting unounted ?'); // This is working, the component is not getting unmounted\r\n    }\r\n\r\n    logout(){\r\n        this.setState({\"currentState\" : \"/\"});\r\n    }\r\n\r\n    pushPage(newComponent) {\r\n        this.props.navigator.pushPage({component: newComponent});\r\n    }\r\n\r\n    popPage() {\r\n        this.props.navigator.popPage();\r\n    }\r\n\r\n    login(){\r\n        this.pushPage(Home);\r\n    }\r\n\r\n    loginFormInputs=() =>{\r\n        return this.props.navigator.state.data.form_data.map(function(value ,key) {\r\n            return (\r\n                    <LoginForm \r\n                        key={key}\r\n                        type={value.type} \r\n                        name={value.field_id}\r\n                        placeholder={value.label} \r\n                    /> \r\n                );\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Page>\r\n                <ToolbarHeader backButton={true} name={Login.displayName} /> \r\n                <div className=\"company-form\">\r\n\r\n                    { this.loginFormInputs() }\r\n                    <p>\r\n                        <Button type=\"button\" onClick={this.login.bind(this)} modifier=\"large--cta\" className=\"block-btn\" >Login</Button>\r\n                    </p>\r\n                </div>\r\n            </Page>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Login;\r\n","import React ,{Component} from \"react\";\r\nimport ApiCall from \"../../services/ApiCall\";\r\nimport css from \"./Login.css\";\r\nimport $ from \"jquery\";\r\nimport {\r\n    Page,\r\n    Input,\r\n    ProgressCircular, \r\n    Button, \r\n    SearchInput, \r\n    List, \r\n    ListItem,\r\n    Card\r\n} from 'react-onsenui';\r\nimport {Ons} from \"../../components/components\";\r\nimport {Login} from \"../../router\";\r\n\r\n\r\nclass VerityCompany  extends Component{\r\n    \r\n    static displayName = 'Verify Company';\r\n    \r\n    apiCall = new ApiCall; \r\n    state = {\r\n        company: '',\r\n        dataToNewState: {},\r\n        currentState: false,\r\n        url: \"http://10.0.18.33:82\",\r\n        sideNav:false\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    handleChange(event) {\r\n        this.setState({company: $(\"#company\").val()});\r\n        if($(\"#url\").val() != \"\" ){\r\n            this.setState({url: $(\"#url\").val()});\r\n        }\r\n    }\r\n\r\n    // CallBack function for verifying company api call\r\n    // Change state dataToNewState and Load Login\r\n    verifyCompany(response){\r\n        if (response.data.form_data.length > 0 ) {\r\n            response.url = this.state.url;\r\n            this.props.navigator.setState(response)\r\n            this.pushPage(Login)\r\n        }else{\r\n            Ons.notification.alert(\"No company registered by this Name\");\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        var req = this.apiCall.ajaxGet(\r\n            this.state.url.trim() + \"/api/users\",\r\n            {\"company\": this.state.company} ,\r\n            this.verifyCompany.bind(this)\r\n        );\r\n\r\n        if(req){\r\n            req.then(error=>{\r\n                if(error == false){\r\n                    Ons.notification.alert(\"Server not found!\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    pushPage(newComponent) {\r\n        this.props.navigator.pushPage({component: newComponent});\r\n    }\r\n\r\n    popPage() {\r\n        this.props.navigator.popPage();\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Page>\r\n                {/* <ToolbarHeader backButton={false} name={VerityCompany.displayName} />  */}\r\n                {/* <ProgressCircular indeterminate /> */}\r\n                <div className=\"company-form\"> \r\n                    <p >\r\n                        <Input\r\n                            onChange={this.handleChange.bind(this) }\r\n                            modifier='material'\r\n                            className=\"block-input\"\r\n                            id='url'\r\n                            placeholder='Base url' />\r\n                    </p>\r\n                    <p>\r\n                        <Input\r\n                            onChange={this.handleChange.bind(this) }\r\n                            modifier='material'\r\n                            className=\"block-input\"\r\n                            id='company'\r\n                            placeholder='Company' />\r\n                    </p>\r\n                    <p>\r\n                        <Button onClick={this.handleSubmit.bind(this)} modifier=\"large--cta\" className=\"block-btn\">Verify</Button>\r\n                    </p>\r\n                </div>\r\n            </Page>   \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default VerityCompany;\r\n{/* <SearchInput\r\nvalue={this.state.text}\r\nonChange={(event) => { this.setState({text: event.target.value})} }\r\nmodifier='material'\r\nplaceholder='Username' /> */}","import React from 'react';\r\nimport {Navigator} from 'react-onsenui';\r\n// Learn more about the Navigator: https://www.npmjs.com/package/react.cordova-navigation_controller\r\nimport './app.css';\r\n// Webpack CSS import\r\nimport 'onsenui/css/onsenui.css';\r\nimport 'onsenui/css/onsen-css-components.css';\r\nimport {Home} from \"./router\";\r\nexport default class App extends React.Component {\r\n\r\n  renderPage(route, navigator) {\r\n    const props = route.props || {};\r\n    props.navigator = navigator;\r\n    return React.createElement(route.component, props );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n        <Navigator\r\n          initialRoute={{component: Home}}\r\n          key=\"app\"\r\n          renderPage={this.renderPage}/>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//       <Page>\r\n//         <Toolbar>\r\n\r\n//           <div className='left'>\r\n//             <BackButton onClick={this.handleClick.bind(this)}>\r\n//               Back\r\n//             </BackButton>\r\n//           </div>\r\n//           <div className='center'>Back button</div>\r\n//         </Toolbar>\r\n//         <hr />\r\n//         <hr />\r\n//         <hr />\r\n//         <hr />\r\n//         <hr />\r\n//         <h1> Hello </h1>\r\n//         <ProgressBar value={55} secondaryValue={87} />\r\n// <ProgressBar indeterminate />\r\n// // <div className='myList'>\r\n// //      <Ripple color='red' />hh\r\n// //    </div>\r\n//         <Checkbox\r\n//   modifier='material' />\r\n\r\n//   <Select modifier=\"material\"\r\n//   value={this.state.value}\r\n//   onChange={(event) => this.setState({value: event.target.value})}>\r\n//   <option value=\"1\">1</option>\r\n//   <option value=\"2\">2nd</option>\r\n//   <option value=\"3\">3rd option</option>\r\n// </Select>\r\n\r\n\r\n// <template id=\"page2.html\">\r\n//   <ons-page>\r\n//     hello\r\n//   </ons-page>\r\n// </template>\r\n\r\n\r\n//         <AlertDialog  isOpen={this.state.isOpen} animation='default'\r\n//           animationOptions={{\r\n//             duration: 1.0,\r\n//             delay: 0.3,\r\n//             timing: 'ease-in'\r\n//           }}\r\n\r\n//           onCancel={this.handleCancel.bind(this)} isCancelable={false} >\r\n//           <div className=\"alert-dialog-title\">Warning!</div>\r\n//           <div className=\"alert-dialog-content\">\r\n//             An error has occurred!\r\n//           </div>\r\n//           <div className=\"alert-dialog-footer\">\r\n//             <button onClick={this.handleCancel.bind(this)} className=\"alert-dialog-button\">\r\n//               Cancel\r\n//             </button>\r\n//             <button onClick={this.handleCancel.bind(this)} className=\"alert-dialog-button\">\r\n//               Ok\r\n//             </button>\r\n//           </div>\r\n//         </AlertDialog>\r\n      \r\n\r\n//       </Page>\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'cordova_script';\r\n\r\n\r\ndocument.addEventListener('deviceready', () => {\r\n\r\n    ReactDOM.render( \r\n        <App cordovaWork={true} key=\"index\" />,\r\n        document.getElementById('root') \r\n    );\r\n}, false);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}